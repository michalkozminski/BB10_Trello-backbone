// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'backbone', 'underscore', 'collections/cards', 'views/cards_view', 'text!templates/board_cards_tab_item.html'], function($, Backbone, _, CardsCollection, CardsView, item_template) {
    var BoardCardsTabsViewItem;
    return BoardCardsTabsViewItem = (function(_super) {

      __extends(BoardCardsTabsViewItem, _super);

      function BoardCardsTabsViewItem() {
        return BoardCardsTabsViewItem.__super__.constructor.apply(this, arguments);
      }

      BoardCardsTabsViewItem.prototype.template = _.template(item_template);

      BoardCardsTabsViewItem.prototype.events = {
        "click": "onClick"
      };

      BoardCardsTabsViewItem.prototype.render = function(key) {
        var jsonModel;
        jsonModel = this.model.toJSON();
        jsonModel["key"] = key;
        $(this.el).html(this.template(jsonModel));
        return this;
      };

      BoardCardsTabsViewItem.prototype.onClick = function() {
        var cards;
        cards = new CardsCollection;
        cards.listId = this.model.id;
        new CardsView({
          model: cards,
          el: $("#screen")
        });
        return cards.fetch({
          success: function(data) {
            console.log("fetched");
            return console.log(data);
          }
        });
      };

      return BoardCardsTabsViewItem;

    })(Backbone.View);
  });

}).call(this);
